<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System;
using System.Collections.ObjectModel;
using System.Data;
using System.Text;
using System.Data.SqlClient;
namespace CHControl.<#= ClassName #>Manage
{
    public class <#= ClassName #> : NotificationObject
	{
	       #region Attribute

		   public string EntityStatu { get; set; }
	       <#
		       foreach(var item in ColumnList)
			   {
			       if(item.DataType=="nvarchar" || 
				       item.DataType=="varchar" || 
					   item.DataType=="text" || 
					   item.DataType=="char"
					   )
				   {
				        #> 
						private string m_<#= item.Name#>;
						public string <#= item.Name#>
						{
							get { return m_<#= item.Name#>; }
							set
							{
								if (value != m_<#= item.Name#>)
								{
									m_<#= item.Name#> = value;
									OnPropertyChanged("<#= item.Name#>");
								}
							}
						}
						<#
				   }
				   if(item.DataType=="date" || 
				       item.DataType=="time" || 
					   item.DataType=="datetime2" ||
					   item.DataType=="datetime"
					   )
			       {
				      if(item.Nullable=="yes")
					  {
					      #> 
							private DateTime? m_<#= item.Name#>;
							public DateTime? <#= item.Name#>
							{
								get { return m_<#= item.Name#>; }
								set
								{
									if (value != m_<#= item.Name#>)
									{
										m_<#= item.Name#> = value;
										OnPropertyChanged("<#= item.Name#>");
									}
								 }
							  }
							<#
					  }
					  else
					  {
					        #> 
							private DateTime m_<#= item.Name#>;
							public DateTime <#= item.Name#>
							{
								get { return m_<#= item.Name#>; }
								set
								{
									if (value != m_<#= item.Name#>)
									{
										m_<#= item.Name#> = value;
										OnPropertyChanged("<#= item.Name#>");
									}
									}
								}
							<#
					  }
				      
				   }

				   if(item.DataType=="int")
			       {
				     if(item.Nullable=="yes")
					  {
					      #> 
							private int? m_<#= item.Name#>;
							public int? <#= item.Name#>
							{
								get { return m_<#= item.Name#>; }
								set
								{
									if (value != m_<#= item.Name#>)
									{
										m_<#= item.Name#> = value;
										OnPropertyChanged("<#= item.Name#>");
									}
								 }
							  }
							<#
					  }
					  else
					  {
					        #> 
							private int m_<#= item.Name#>;
							public int <#= item.Name#>
							{
								get { return m_<#= item.Name#>; }
								set
								{
									if (value != m_<#= item.Name#>)
									{
										m_<#= item.Name#> = value;
										OnPropertyChanged("<#= item.Name#>");
									}
									}
								}
							<#
					  }
				   }

				   if(item.DataType=="bit")
			       {
				      if(item.Nullable=="yes")
					  {
					      #> 
							private bool? m_<#= item.Name#>;
							public bool? <#= item.Name#>
							{
								get { return m_<#= item.Name#>; }
								set
								{
									if (value != m_<#= item.Name#>)
									{
										m_<#= item.Name#> = value;
										OnPropertyChanged("<#= item.Name#>");
									}
								 }
							  }
							<#
					  }
					  else
					  {
					        #> 
							private bool m_<#= item.Name#>;
							public bool <#= item.Name#>
							{
								get { return m_<#= item.Name#>; }
								set
								{
									if (value != m_<#= item.Name#>)
									{
										m_<#= item.Name#> = value;
										OnPropertyChanged("<#= item.Name#>");
									}
									}
								}
							<#
					  }
				   }

				    if(item.DataType=="decimal" 
					|| item.DataType=="numeric"
					)
			       {
				      if(item.Nullable=="yes")
					  {
					      #> 
							private decimal? m_<#= item.Name#>;
							public decimal? <#= item.Name#>
							{
								get { return m_<#= item.Name#>; }
								set
								{
									if (value != m_<#= item.Name#>)
									{
										m_<#= item.Name#> = value;
										OnPropertyChanged("<#= item.Name#>");
									}
								 }
							  }
							<#
					  }
					  else
					  {
					        #> 
							private decimal m_<#= item.Name#>;
							public decimal <#= item.Name#>
							{
								get { return m_<#= item.Name#>; }
								set
								{
									if (value != m_<#= item.Name#>)
									{
										m_<#= item.Name#> = value;
										OnPropertyChanged("<#= item.Name#>");
									}
									}
								}
							<#
					  }
				   }
				   if(item.DataType=="uniqueidentifier")
				   {
				      if(item.Nullable=="yes")
					  {
					     #> 
							private Guid? m_<#= item.Name#>;
							public Guid? <#= item.Name#>
							{
								get { return m_<#= item.Name#>; }
								set
								{
									if (value != m_<#= item.Name#>)
									{
										m_<#= item.Name#> = value;
										OnPropertyChanged("<#= item.Name#>");
									}
								 }
							  }
							<#
					  }
					  else
					  {
					       #> 
							private Guid m_<#= item.Name#>;
							public Guid <#= item.Name#>
							{
								get { return m_<#= item.Name#>; }
								set
								{
									if (value != m_<#= item.Name#>)
									{
										m_<#= item.Name#> = value;
										OnPropertyChanged("<#= item.Name#>");
									}
								 }
							  }
							<#
					  }
				   }

			   }
		   #>
		  
		   #endregion

		   #region Method
        /// <summary>
        /// 新增
        /// </summary>
        /// <returns></returns>
        public bool InsertEntity()
        {
		    StringBuilder sb = new StringBuilder();
			sb.Append("INSERT INTO <#= DataName#>(");
		    <#
			    int num=ColumnList.Count;
				int i=0;
				foreach(var item in ColumnList)
				{
			        i++;
					if(i==num)
					{
					   #>
					   sb.Append("<#= item.Name#>");
					   
					   <#
					}
					else
					{
					    #>
						sb.Append("<#= item.Name+"," #>");
					   <#
					}
				}
			#>sb.Append(") VALUES (");<#
			    int j=0;
			    foreach(var item in ColumnList)
				{
			        j++;
					if(j==num)
					{
					   if(item.DataType=="nvarchar" || 
				       item.DataType=="varchar" || 
					   item.DataType=="text" || 
					   item.DataType=="char"
					   )
					   {
					     if(item.Nullable=="no")
						 {
						    #>
						      sb.Append(<#= item.Name#>=="" ? "" : "'" + <#= item.Name#> + "'"); 
					        <#  
						 }
					     #>
						   sb.Append(<#= item.Name#>=="" ? "NULL" : "'" + <#= item.Name#> + "'"); 
					     <#
					   }
					   else
					   {
					       #>
						     sb.Append(<#= item.Name#>==null ? "NULL" : "'" + <#= item.Name#> + "'"); 
					       <#
					   }
					}
					else
					{  
					     if(item.DataType=="nvarchar" || 
				       item.DataType=="varchar" || 
					   item.DataType=="text" || 
					   item.DataType=="char"
					   )
					   {
					     if(item.Nullable=="no")
						 {
						    #>
						      sb.Append(<#= item.Name#>=="" ? "''" : "'" + <#= item.Name#> + "'"); 
							  sb.Append(",");
					        <#  
						 }
					     #>
						   sb.Append(<#= item.Name#>=="" ? "NULL" : "'" + <#= item.Name#> + "'"); 
						   sb.Append(",");
					     <#
					   }
					   else
					   {
					       #>
						     sb.Append(<#= item.Name#>==null ? "NULL" : "'" + <#= item.Name#> + "'" ); 
							 sb.Append(",");
					       <#
					   }
					}
				}
			#>
			sb.Append(")");
			string sql=sb.ToString();
			int result = DB.ExecuteNonQuery(sql);
            return (result>0);
        }

        /// <summary>
        /// 更新
        /// </summary>
        /// <returns></returns>
        public bool UpdateEntity()
        {
		    StringBuilder sb = new StringBuilder();
            sb.Append("UPDATE [dbo].[<#= DataName#>] SET ");
			<#
				       int s=0;
					   foreach(var item in ColumnList)
					   {
					      s++;
					      if(!item.IsPK)
						  {
						     if(s==num)
							  {
								 if(item.DataType=="nvarchar" || 
				                      item.DataType=="varchar" || 
					                  item.DataType=="text" || 
					                  item.DataType=="char"
					                 )
					                {
									   if(item.Nullable=="no")
									   {
									       #>
								          sb.Append("<#= item.Name#>=");
                                          sb.Append(<#= item.Name#> == "" ? "''" : "'" + <#= item.Name#> + "'");
								          <#
									    }
										else
										{
										   #>
								             sb.Append("<#= item.Name#>=");
                                             sb.Append(<#= item.Name#> == "" ? "NULL" : "'" + <#= item.Name#> + "'");
								           <#
										}
								           
								    }
									else
									{
									      #>
								             sb.Append("<#= item.Name#>=");
                                             sb.Append(<#= item.Name#> == null ? "NULL" : "'" + <#= item.Name#> + "'");
								           <#
									}
							  }
							  else
							  {
							       if(item.DataType=="nvarchar" || 
				                      item.DataType=="varchar" || 
					                  item.DataType=="text" || 
					                  item.DataType=="char"
					                 )
					                {
									   if(item.Nullable=="no")
									   {
									       #>
								          sb.Append("<#= item.Name#>=");
                                          sb.Append(<#= item.Name#> == "" ? "''" : "'" + <#= item.Name#> + "'");
                                          sb.Append(",");
								          <#
									    }
										else
										{
										   #>
								             sb.Append("<#= item.Name#>=");
                                             sb.Append(<#= item.Name#> == "" ? "NULL" : "'" + <#= item.Name#> + "'");
                                             sb.Append(",");
								           <#
										}
								           
								    }
									else
									{
									      #>
								             sb.Append("<#= item.Name#>=");
                                             sb.Append(<#= item.Name#> == null ? "NULL" : "'" + <#= item.Name#> + "'");
                                             sb.Append(",");
								           <#
									}
							  }
						  }
					}
				  #>
				  sb.Append(" WHERE ");
				   <#
				      var pklist = ColumnList.Where(p => p.IsPK).ToList();
					  int count = pklist.Count;
					  int k = 0;
					  foreach (var pk in pklist)
					  {
						   k++;
						   if (k == count)
							{
							    
								   #>
								     sb.Append($"<#= pk.Name#>='{<#= pk.Name#>}' ");
								   <#
							}
							else
							{
							    #>
								   sb.Append($"<#= pk.Name#>='{<#= pk.Name#>}'" + " and ");
								<#
							}
					    }
				   #>
			 string sql = sb.ToString();	                 
			 int result = DB.ExecuteNonQuery(sql);
             return (result>0);
        }

        /// <summary>
        /// 删除
        /// </summary>
        /// <returns></returns>
        public bool DeleteEntity()
        {
		    StringBuilder sb = new StringBuilder();
			sb.Append("delete [dbo].[<#= DataName#>] where ");
			    <#
				      
					  int ks = 0;
					  foreach (var pk in pklist)
					  {
						   ks++;
						   if (ks == count)
							{
								#>
								    sb.Append($"<#= pk.Name#>='{<#= pk.Name#>}' ");
								<#
							}
							else
							{
							    #>
								   sb.Append($"<#= pk.Name#>='{<#= pk.Name#>}'" + " and ");
								<#
							}
					    }
				   #>
		    string sql = sb.ToString();
            int result = DB.ExecuteNonQuery(sql);
            return (result > 0);
        }

        /// <summary>
        /// 查询
        /// </summary>
        /// <param name="sql"></param>
        /// <returns></returns>
        public ObservableCollection<<#= ClassName #>> SelectEntitys(string sql)
        {
		     ObservableCollection<<#= ClassName #>> entityList=new ObservableCollection<<#= ClassName #>>();
		     DataTable dt=DB.ExecuteSelect(sql).Tables[0]; 
			 for(int i=0;i<dt.Rows.Count;i++)
			 {
			     <#= ClassName #> entityModel=new <#= ClassName #>();
				 <#
				  foreach(var item in ColumnList)
				  {
			            if(item.DataType=="nvarchar" || 
							item.DataType=="varchar" || 
							item.DataType=="text" || 
							item.DataType=="char"
							)
						{
						   
						    if(item.Nullable=="no")
							{
							     #>
						    entityModel.<#= item.Name#>=dt.Rows[i]["<#= item.Name#>"].ToString();
							<#
							}
							else
							{
							   #>
						    entityModel.<#= item.Name#>=dt.Rows[i]["<#= item.Name#>"]==DBNull.Value?"":dt.Rows[i]["<#= item.Name#>"].ToString();
							<#
							}
						   
						}
						if(item.DataType=="date" || 
							item.DataType=="time" || 
							item.DataType=="datetime2" ||
							item.DataType=="datetime"
							)
						{
						    if(item.Nullable=="no")
							{
						    #>
						    entityModel.<#= item.Name#>=Convert.ToDateTime(dt.Rows[i]["<#= item.Name#>"]);
							<#
							}
							else
							{
							 #>
						    entityModel.<#= item.Name#>=dt.Rows[i]["<#= item.Name#>"]==DBNull.Value?(DateTime?)null:Convert.ToDateTime(dt.Rows[i]["<#= item.Name#>"]);
							<#
							}
						}
						if(item.DataType=="int")
			            {
						    if(item.Nullable=="no")
							{
							 #>
						    entityModel.<#= item.Name#>=Convert.ToInt32(dt.Rows[i]["<#= item.Name#>"]);
							<#
							}
							else
							{
							 #>
						    entityModel.<#= item.Name#>=dt.Rows[i]["<#= item.Name#>"]==DBNull.Value?(int?)null:Convert.ToInt32(dt.Rows[i]["<#= item.Name#>"]);
							<#
							}
						    
						}
						 if(item.DataType=="bit")
						 {
						    if(item.Nullable=="no")
							{
							#>
						    entityModel.<#= item.Name#>=Convert.ToBoolean(dt.Rows[i]["<#= item.Name#>"]);
							<#
							}
							else
							{
							#>
						    entityModel.<#= item.Name#>=dt.Rows[i]["<#= item.Name#>"]==DBNull.Value?(bool?)null:Convert.ToBoolean(dt.Rows[i]["<#= item.Name#>"]);
							<#
							}
						 }
						 if(item.DataType=="decimal" 
							|| item.DataType=="numeric"
							)
						 {
						   if(item.Nullable=="no")
						   {
						   #>
						    entityModel.<#= item.Name#>=Convert.ToDecimal(dt.Rows[i]["<#= item.Name#>"]);
							<#
						   }
						   else
						   {
						    #>
						    entityModel.<#= item.Name#>=dt.Rows[i]["<#= item.Name#>"]==DBNull.Value?(decimal?)null:Convert.ToDecimal(dt.Rows[i]["<#= item.Name#>"]);
							<#
						   }
						 }
						 if(item.DataType=="uniqueidentifier")
						{
						     if(item.Nullable=="no")
						   {
						    #>
						    entityModel.<#= item.Name#>=Guid.Parse(dt.Rows[i]["<#= item.Name#>"].ToString());
							<#
							}
							else
							{
							  #>
						    entityModel.<#= item.Name#>=dt.Rows[i]["<#= item.Name#>"]==DBNull.Value?(Guid?)null:Guid.Parse(dt.Rows[i]["<#= item.Name#>"].ToString());
							<#
							}
						}
				  }
				 #>
				 entityList.Add(entityModel);
			 } 
            return entityList;
        }

		/// <summary>
        /// 查询
        /// </summary>
        /// <param name="sql"></param>
        /// <returns></returns>
        public <#= ClassName #> SelectEntity(string sql)
        {
		    <#= ClassName #> entityModel = new <#= ClassName #>();
            SqlDataReader dataRead=DB.ExecuteReader(sql);
            if (dataRead.Read())
            {
			     <#
				  foreach(var item in ColumnList)
				  {
			            if(item.DataType=="nvarchar" || 
							item.DataType=="varchar" || 
							item.DataType=="text" || 
							item.DataType=="char"
							)
						{
						    if(item.Nullable=="no")
							{
							#>
						    entityModel.<#= item.Name#>=dataRead["<#= item.Name#>"].ToString();
							<#
							}
							else
							{
							 #>
						    entityModel.<#= item.Name#>=dataRead["<#= item.Name#>"]==DBNull.Value?"":dataRead["<#= item.Name#>"].ToString();
							<#
							}
						    
						}
						if(item.DataType=="date" || 
							item.DataType=="time" || 
							item.DataType=="datetime2" ||
							item.DataType=="datetime"
							)
						{
						   if(item.Nullable=="no")
							{
						    #>
						    entityModel.<#= item.Name#>=dataRead["<#= item.Name#>"]==DBNull.Value?(DateTime?)null:Convert.ToDateTime(dataRead["<#= item.Name#>"]);
							<#
							}
							else
							{
							 #>
						    entityModel.<#= item.Name#>=Convert.ToDateTime(dataRead["<#= item.Name#>"]);
							<#
							}
						}
						if(item.DataType=="int")
			            {
						   if(item.Nullable=="no")
							{
						     #>
						    entityModel.<#= item.Name#>=Convert.ToInt32(dataRead["<#= item.Name#>"]);
							<#
							}
							else
							{
							 #>
						    entityModel.<#= item.Name#>=dataRead["<#= item.Name#>"]==DBNull.Value?(int?)null:Convert.ToInt32(dataRead["<#= item.Name#>"]);
							<#
							}
						}
						 if(item.DataType=="bit")
						 {
						     if(item.Nullable=="no")
							{
						      #>
						    entityModel.<#= item.Name#>=Convert.ToBoolean(dataRead["<#= item.Name#>"]);
							<#
							}
							else
							{
							   #>
						    entityModel.<#= item.Name#>=dataRead["<#= item.Name#>"]==DBNull.Value?(bool?)null:Convert.ToBoolean(dataRead["<#= item.Name#>"]);
							<#
							}
						 }
						 if(item.DataType=="decimal" 
							|| item.DataType=="numeric"
							)
						 {

						  if(item.Nullable=="no")
							{
						     #>
						    entityModel.<#= item.Name#>=Convert.ToDecimal(dataRead["<#= item.Name#>"]);
							<#
							}
							else
							{
							 #>
						    entityModel.<#= item.Name#>=dataRead["<#= item.Name#>"]==DBNull.Value?(decimal?)null:Convert.ToDecimal(dataRead["<#= item.Name#>"]);
							<#
							}
						 }
						 if(item.DataType=="uniqueidentifier")
						{
						   if(item.Nullable=="no")
							{
						    #>
						    entityModel.<#= item.Name#>=dataRead["<#= item.Name#>"]==DBNull.Value?(Guid?)null:Guid.Parse(dataRead["<#= item.Name#>"].ToString());
							<#
							}
							else
							{
							 #>
						    entityModel.<#= item.Name#>=Guid.Parse(dataRead["<#= item.Name#>"].ToString());
							<#
							}
						}
				  }
				 #>
			}
			return entityModel;
        }
        #endregion


	}
}
